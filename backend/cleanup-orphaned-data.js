const db = require('./config/db');

async function cleanupOrphanedData() {
  try {
    console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• route_details ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ routes...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• route_details ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ routes ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
    const [orphanedData] = await db.query(`
      SELECT rd.*, r.id as route_exists
      FROM route_details rd
      LEFT JOIN routes r ON rd.route_id = r.id
      WHERE r.id IS NULL
    `);
    
    console.log('üìä ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• route_details ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ routes:', orphanedData.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
    
    if (orphanedData.length > 0) {
      console.log('üóëÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• route_details ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ routes...');
      
      // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• route_details ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ routes ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
      const [result] = await db.query(`
        DELETE rd FROM route_details rd
        LEFT JOIN routes r ON rd.route_id = r.id
        WHERE r.id IS NULL
      `);
      
      console.log('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• route_details ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', result.affectedRows, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
    } else {
      console.log('‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• route_details ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö');
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    const [routeDetailsCount] = await db.query('SELECT COUNT(*) as count FROM route_details');
    const [routesCount] = await db.query('SELECT COUNT(*) as count FROM routes');
    
    console.log('üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô route_details ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠:', routeDetailsCount[0].count);
    console.log('üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô routes ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠:', routesCount[0].count);
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    process.exit(0);
  }
}

cleanupOrphanedData();

