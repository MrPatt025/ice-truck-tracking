// middleware/auth.js
const jwt = require('jsonwebtoken');

const SECRET_KEY = process.env.JWT_SECRET || '123456';

module.exports = (roles = []) => {
  // ‡∏ñ‡πâ‡∏≤ roles ‡πÄ‡∏õ‡πá‡∏ô string ‡πÄ‡∏ä‡πà‡∏ô 'admin' ‡πÉ‡∏´‡πâ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô array ['admin']
  if (typeof roles === 'string') {
    roles = [roles];
  }

  return (req, res, next) => {
    const authHeader = req.headers.authorization;
    console.log('üîç Auth Debug - URL:', req.url);
    console.log('üîç Auth Debug - Auth Header:', authHeader);
    console.log('üîç Auth Debug - Required Roles:', roles);

    // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á Bearer token ‡πÅ‡∏•‡∏∞ token ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
    const token = authHeader?.startsWith('Bearer ')
      ? authHeader.split(' ')[1]
      : authHeader;

    console.log('üîç Auth Debug - Extracted Token:', token ? '‡∏°‡∏µ' : '‡πÑ‡∏°‡πà‡∏°‡∏µ');

    if (!token) {
      console.log('‚ùå Auth Debug - ‡πÑ‡∏°‡πà‡∏°‡∏µ Token');
      return res.status(401).json({ message: '‚ö†Ô∏è ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö Token ‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠' });
    }

    try {
      const decoded = jwt.verify(token, SECRET_KEY);
      console.log('‚úÖ Auth Debug - Decoded Token:', decoded);
      req.user = {
        id: decoded.id,
        role: decoded.role,
        username: decoded.username || null
      };
      console.log('‚úÖ Auth Debug - User Object:', req.user);

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå (role) ‡∏ñ‡πâ‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ
      if (roles.length > 0 && !roles.includes(decoded.role)) {
        console.log('‚ùå Auth Debug - Role ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô:', decoded.role, '‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÉ‡∏ô', roles);
        return res.status(403).json({ message: '‚õî ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á (Forbidden)' });
      }

      console.log('‚úÖ Auth Debug - ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
      next(); // ‡∏ú‡πà‡∏≤‡∏ô token ‡πÅ‡∏•‡∏∞ role -> ‡πÑ‡∏õ middleware ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    } catch (err) {
      console.error('‚ùå Auth Debug - Token verification failed:', err.message);
      return res.status(401).json({ message: '‚ùå Token ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏' });
    }
  };
};
